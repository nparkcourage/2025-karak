<CLI 하노이 탑, 구글 코랩에서 실행>

# 역할
너는 파이썬 코딩 전문가야.
지시에 맞게 코드를 만들어줘

# 지시
* Python으로 다음 요구 사항에 맞는 CLI 기반의 하노이의 탑 게임을 만들어줘.

# 요구 사항
1. 사용자는 시작 시 디스크 개수(1~10)를 입력할 수 있어야 해.
2. 디스크는 숫자가 클수록 넓은 `=` 문자로 표현되며, 콘솔에 탑 형식으로 시각화해서 보여줘.
   - 각 탑 아래에는 A, B, C 기둥 이름을 보여주고, 디스크가 없으면 `|`를 표시해줘.
3. 매 이동마다 화면을 깨끗하게 지우고 현재 상태를 다시 보여줘.
4. 이동은 `A C`, `AC`, `a b` 등의 형태로 입력 받고, **대소문자 구분 없이**, **띄어쓰기 유무와 관계없이** 해석되도록 만들어줘.
5. 사용자가 이동할 때 작은 디스크 위에 큰 디스크를 올리려고 하면 에러 메시지를 출력하고 다시 입력을 받게 해줘.
6. 모든 디스크가 목표 기둥(C)으로 이동하면 성공 메시지 `🎉 성공! 총 이동 횟수: N`을 출력하고 종료해줘.
7. 잘못된 입력 시 오류 메시지를 출력하고 다시 입력을 받을 수 있게 해줘.
8. 완전한 Python CLI 프로그램 형식으로 작성해줘. 외부 라이브러리는 사용하지 마.




<하노이 탑 GUI>

# 지시
ChatGPT의 캔버스 기능(글쓰기 또는 코딩)을 사용해서 HTML + JavaScript로 하노이의 탑 게임을 만들어줘.

# 요구 사항: 아래 요구사항을 만족하는 하노이의 탐 게임을 만들어줘

1. HTML5 `<canvas>`를 사용해 3개의 기둥과 디스크를 시각적으로 표현해줘.
2. 디스크는 마우스 클릭으로 선택해서 다른 기둥으로 옮길 수 있게 해줘.
3. 디스크는 숫자가 클수록 크기가 커야 하며, 초기 상태에서 큰 디스크가 아래, 작은 디스크가 위로 쌓이게 배치해줘.
   - 예: `[NUM_DISKS, NUM_DISKS-1, ..., 1]` 형식으로 시작 봉에 쌓여 있어야 함.
4. 작은 디스크 위에 큰 디스크를 올리면 안 되고, 그런 경우에는 에러 메시지로 `❌ 에러: 작은 디스크 위에 큰 디스크를 올릴 수 없습니다!`를 화면에 표시해줘.
5. 유효한 이동이 발생하면 디스크를 실제로 이동시키고, 이동 횟수를 실시간으로 `이동 횟수: N` 형식으로 표시해줘.
6. 사용자가 디스크 개수(1~10)를 입력할 수 있는 필드를 제공하고, '게임 시작' 버튼을 누르면 그 개수로 초기화되도록 해줘.
7. 목표 봉 위치는 1 또는 2만 선택할 수 있게 해줘
8. 목표 봉은 초록색 기둥으로 시각적으로 표시해줘.
9. 모든 디스크가 목표 봉에 쌓이면 `🎉 성공! 총 이동 횟수: N`이라는 초록색 메시지를 표시해줘.
10. 완전한 HTML 문서로 작성해주고 외부 라이브러리는 사용하지마.



<슈팅 게임 만들기>
프롬프트

간단한 슈팅 게임을 하나 만들어줘

좋아 플레이어 조작이 안되, 수정해 줘

적이 내려오는 속력이 너무 빨라, 좀 천천히 내려오게 수정해줘

응, 난이도 조절 옵션도 추가하고 적과 충돌 했을 때 폭발하며 끝나도록 수정해줘

시작과 중지 버튼을 추가해 주고, 플레이어의 조정이 좀 더 미세하게 할 수 있도록 수정해줘

플레이어가 화살표 키 한번 눌렀을 때 이동하는 거리를 더 짧게 수정해 줘




<파이썬 코딩 공부하기>
지금부터 채팅은 모두 아래 지시에 따라 처리해줘

# 역할
너는 파이썬 코딩 선생님이야.
너의 목표는 나에게 파이썬 코딩에서 중요한 개념들을 알려 주고 실용적인 예제 코드를 통해서 나의 코딩 실력이 늘어나도록 도와 주는 것이야.

# 지시
* 먼저 나에게 파이썬 코딩에 필요한 중요한 개념들을 제시하고 그 중 하나를 선택하도록 질문을 해
* 내가 선택한 개념에 대해 쉽게 설명해 주고 예제 코드를 보여줘
* 내가 잘 이해했는지 확인하기 위해 문제를 하나 내줘
* 문제에 내가 답하면 맞는지 확인해줘




<파이썬으로 알고리즘 공부하기>
지금부터 채팅은 모두 아래 지시에 따라 처리해줘

# 역할
너는 코딩 알고리즘 선생님이야.
너의 목표는 나에게 프로그래밍에서 필요한 기본 알고리즘들을 가르쳐 주는 거야
코드는 파이썬으로 만들어 줘

# 지시
* 먼저 기본적인 알고리즘을 설명해줘
* 그리고 내가 알고리즘을 파이썬으로 코딩할 수 있게 문제를 내줘
* 문제에 내가 답하면 맞는지 확인해줘

예) linear search, 재귀함수


<계단 오르기 문제>
https://codeup.kr/problem.php?id=4564



<중앙값 구하기>
중앙값(median)은 어떤 주어진 값들을 정렬했을 때 가장 중앙에 위치하는 값을 의미한다. 예를 들어 1, 2, 100의 세 값이 있을 때, 2가 가장 중앙에 있기 때문에 2가 중앙값이다. 값이 짝수개일 때에는 중앙값이 유일하지 않고 두 개가 될 수도 있다. 이 경우 그 두 값의 평균을 취한다. 예를 들어 1, 10, 90, 200 네 수의 중앙값은 10과 90의 평균인 50이 된다.
 
5개의 자연수가 주어질 때, 중앙값을 찾아내는 프로그램을 작성하시오.
 
예를 들어, 다음의 수에 대하여 중앙값은,
57 34 87 83 47
크기 순서상으로 57이 가운데 있고 이 값이 중앙값이 된다.




<프롬프트에서 코드 블록 사용하기기>
다음 코드에서 sort()를 사용하지 않고 sorting 함수를 만들어서 포함하는 코드로 수정해줘

```python
# 짝수 개의 수에서 중앙값(중간 두 수의 평균) 구하기

# 예시 입력 (짝수 개)
numbers = [1, 10, 90, 200]  # 길이 4

# 정렬
numbers.sort()

# 중앙값 계산
n = len(numbers)
middle = n // 2
median = (numbers[middle - 1] + numbers[middle]) / 2

# 출력
print("중앙값:", median)  # 결과: 50.0
```






